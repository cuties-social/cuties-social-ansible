---
- name: patch status validator
  lineinfile:
    path: "{{ mastodon_path }}/app/validators/status_length_validator.rb"
    regexp: 'MAX_CHARS = '
    line: '  MAX_CHARS = (ENV["MAX_TOOT_CHARS"] || 500).to_i'

- name: patch compose form 1/3
  blockinfile:
    path: "{{ mastodon_path }}/app/javascript/mastodon/features/compose/components/compose_form.js"
    block: |
        import initialState from '../../../initial_state';
        const maxChars = initialState.max_toot_chars;
    insertbefore: "import Icon from 'mastodon/components/icon';"
    marker: "// {mark} ANSIBLE MANAGED BLOCK"

- name: patch compose form 2/3
  lineinfile:
    path: "{{ mastodon_path }}/app/javascript/mastodon/features/compose/components/compose_form.js"
    regexp: return !\(isSubmitting \|\| isUploading \|\| isChangingUpload \|\| length\(fulltext\) > .* \|\| \(isOnlyWhitespace && !anyMedia\)\);
    line: "    return !(isSubmitting || isUploading || isChangingUpload || length(fulltext) > maxChars || (isOnlyWhitespace && !anyMedia));"

- name: patch compose form 3/3
  lineinfile:
    path: "{{ mastodon_path }}/app/javascript/mastodon/features/compose/components/compose_form.js"
    regexp: <div className='character-counter__wrapper'>
    line: "         <div className='character-counter__wrapper'><CharacterCounter max={maxChars} text={this.getFulltextForCharacterCounting()} /></div>"

---
- name: patch initial state serializer 1/2
  blockinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/serializers/initial_state_serializer.rb"
    block: |
        def max_toot_chars
          StatusLengthValidator::MAX_CHARS
        end
    insertbefore: 'private'

- name: patch initial state serializer 2/2
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/serializers/initial_state_serializer.rb"
    regexp: ':media_attachments, :settings'
    line: '             :media_attachments, :settings, :max_toot_chars'

- name: patch instance serializer 1/2
  blockinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/serializers/rest/instance_serializer.rb"
    block: |
        def max_toot_chars
          StatusLengthValidator::MAX_CHARS
        end
    insertbefore: 'private'

- name: patch instance serializer 2/2
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/serializers/rest/instance_serializer.rb"
    regexp: ':languages, :registrations, :approval_required'
    line: '             :languages, :max_toot_chars, :registrations, :approval_required'

- name: patch status validator
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/validators/status_length_validator.rb"
    regexp: 'MAX_CHARS = '
    line: '  MAX_CHARS = (ENV["MAX_TOOT_CHARS"] || 500).to_i'

- name: patch compose form 1/3
  blockinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/javascript/mastodon/features/compose/components/compose_form.js"
    block: |
        import initialState from '../../../initial_state';
        const maxChars = initialState.max_toot_chars;
    insertbefore: "import Icon from 'mastodon/components/icon';"

- name: patch compose form 2/4
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/javascript/mastodon/features/compose/components/compose_form.js"
    regexp: if \(isSubmitting \|\| isUploading \|\| isChangingUpload \|\| length\(fulltext\) > .* \|\| \(fulltext.length !== 0 && fulltext.trim\(\).length === 0 && !anyMedia\)\) {
    line: "    if (isSubmitting || isUploading || isChangingUpload || length(fulltext) > maxChars || (fulltext.length !== 0 && fulltext.trim().length === 0 && !anyMedia)) {"

- name: patch compose form 3/4
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/javascript/mastodon/features/compose/components/compose_form.js"
    regexp: const disabledButton = disabled \|\| this.props.isUploading \|\| this.props.isChangingUpload \|\| length\(text\) > .* \|\| \(text.length !== 0 && text.trim\(\).length === 0 && !anyMedia\);
    line: "    const disabledButton = disabled || this.props.isUploading || this.props.isChangingUpload || length(text) > maxChars || (text.length !== 0 && text.trim().length === 0 && !anyMedia);"

- name: patch compose form 4/4
  lineinfile:
    path: "{{ mastodon_home }}/{{mastodon_path}}/app/javascript/mastodon/features/compose/components/compose_form.js"
    regexp: <div className='character-counter__wrapper'><CharacterCounter max=\{.*\} text={text} \/><\/div>
    line: "         <div className='character-counter__wrapper'><CharacterCounter max={maxChars} text={text} /></div>"
